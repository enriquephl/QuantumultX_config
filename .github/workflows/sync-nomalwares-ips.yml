name: Sync NoMalwares.conf

on:
  workflow_dispatch: {}
  schedule:
    # UTC 23:00 = UTC+8 07:00
    - cron: "0 23 * * *"

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Sync IP rules
        shell: bash
        env:
          SRC_URLS: |
            https://raw.githubusercontent.com/SukkaLab/ruleset.skk.moe/refs/heads/master/List/ip/reject.conf
            https://raw.githubusercontent.com/enriquephl/QuantumultX_config/refs/heads/main/ClashRuleSet/List/ip/banhttpdns.conf
          TARGET_FILE: filters/NoMalwares.conf
        run: |
          set -euo pipefail
          mkdir -p "$(dirname "$TARGET_FILE")"
          tmpdir="$(mktemp -d)"

          echo "==> Fetch & normalize from multiple sources"
          : > "$tmpdir/remote.norm.all"   # 清空聚合临时文件

          i=0
          while IFS= read -r url; do
            [[ -z "$url" ]] && continue
            i=$((i+1))
            echo "  [$i] $url"
            curl -fsSL "$url" -o "$tmpdir/src_$i.conf"

            # 标准化为：IP-CIDR/ IP-ASN 全大写、去空格、去 no-resolve、统一追加 ,NoMalwares
            awk 'BEGIN{IGNORECASE=1}
                /^[[:space:]]*ip-(cidr|asn)/ {
                  n=split($0, a, ",")
                  pre=toupper(a[1])
                  gsub(/^IP-CIDR6$/, "IP6-CIDR", pre)
                  body=a[2]; gsub(/[[:space:]]+/, "", body)
                  print pre "," body ",NoMalwares"
                }' "$tmpdir/src_$i.conf" \
              | sed 's/,[[:space:]]*no-resolve//Ig' \
              | sed 's/^[[:space:]]*//' \
              >> "$tmpdir/remote.norm.all"
          done <<< "$SRC_URLS"

          # 多来源聚合去重，得到最终远端集合
          LC_ALL=C sort -u "$tmpdir/remote.norm.all" > "$tmpdir/remote.norm.list"
          echo "  => Aggregated sources: $(wc -l < "$tmpdir/remote.norm.list") lines after de-dup"

          echo "==> Prepare local file (if missing)"
          touch "$TARGET_FILE"

          echo "==> Build LOCAL compare set (BODY from UPPERCASE lines in CURRENT file)"
          awk '/^[[:space:]]*(IP-CIDR|IP-ASN)\b/ {
                 n=split($0, a, ",")
                 body=a[2]; gsub(/[[:space:]]+/, "", body)
                 print body
               }' "$TARGET_FILE" \
            | LC_ALL=C sort -u > "$tmpdir/local.body.list" || true

          echo "==> Build REMOTE compare set (BODY)"
          awk -F',' '{body=$2; gsub(/[[:space:]]+/, "", body); print body}' "$tmpdir/remote.norm.list" \
            | LC_ALL=C sort -u > "$tmpdir/remote.body.list"

          echo "==> Diff on BODY (uppercase-only universe)"
          comm -13 "$tmpdir/local.body.list"  "$tmpdir/remote.body.list" > "$tmpdir/to_add.body"    || true
          comm -23 "$tmpdir/local.body.list"  "$tmpdir/remote.body.list" > "$tmpdir/to_remove.body" || true

          echo -e "\n\033[1;32m新增的 CIDR/ASN (BODY):\033[0m"
          [[ -s "$tmpdir/to_add.body" ]] && sed 's/^/  + /' "$tmpdir/to_add.body" || echo "  (无新增)"
          echo -e "\n\033[1;31m移除的 CIDR/ASN (BODY):\033[0m"
          [[ -s "$tmpdir/to_remove.body" ]] && sed 's/^/  - /' "$tmpdir/to_remove.body" || echo "  (无移除)"

          echo "==> Strip previous managed block completely (incl. markers)"
          # 删除旧文件中受管区块（包含 begin/end 两行）
          sed -e '/^# ===== Managed by GitHub Action: UPPERCASE IP-CIDR \/ IP-ASN begin =====$/,/^# ===== Managed by GitHub Action: UPPERCASE IP-CIDR \/ IP-ASN end =====$/d' \
              "$TARGET_FILE" > "$tmpdir/local.without_managed"

          echo "==> Keep local non-uppercase lines intact"
          # 保留小写 ip-cidr/ip-asn 与其它非大写规则
          awk '!/^[[:space:]]*(IP-CIDR|IP-ASN)\b/' "$tmpdir/local.without_managed" > "$tmpdir/local.nonupper.keep"

          echo "==> Rebuild managed uppercase block to EXACTLY match remote"
          cp "$tmpdir/remote.norm.list" "$tmpdir/new.upper.block"

          echo "==> Assemble new file"
          {
            cat "$tmpdir/local.nonupper.keep"
            echo
            echo "# ===== Managed by GitHub Action: UPPERCASE IP-CIDR / IP-ASN begin ====="
            cat "$tmpdir/new.upper.block"
            echo "# ===== Managed by GitHub Action: UPPERCASE IP-CIDR / IP-ASN end ====="
          } > "$tmpdir/new.NoMalwares.conf"

          if ! diff -q "$TARGET_FILE" "$tmpdir/new.NoMalwares.conf" >/dev/null; then
            mv "$tmpdir/new.NoMalwares.conf" "$TARGET_FILE"
            echo "==> Updated NoMalwares.conf"
          else
            echo "==> No changes"
          fi

      - name: Commit & push if changed
        shell: bash
        run: |
          set -euo pipefail
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add filters/NoMalwares.conf
            msg_ts=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            git commit -m "chore: update NoMalwares.conf: ${msg_ts}"
            git push
          else
            echo "Nothing to commit."
          fi